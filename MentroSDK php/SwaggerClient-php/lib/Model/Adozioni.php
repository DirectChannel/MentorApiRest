<?php
/**
 * Adozioni
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Mentor.ApiRest
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.17
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * Adozioni Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Adozioni implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Adozioni';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id_adozione' => 'int',
        'codice' => 'string',
        'nome' => 'string',
        'cognome' => 'string',
        'sesso' => 'string',
        'data_nascita' => 'string',
        'location' => 'string',
        'url_foto' => 'string',
        'nazione' => '\Swagger\Client\Model\DefaultTable',
        'programma' => '\Swagger\Client\Model\DefaultTable'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id_adozione' => 'int32',
        'codice' => null,
        'nome' => null,
        'cognome' => null,
        'sesso' => null,
        'data_nascita' => null,
        'location' => null,
        'url_foto' => null,
        'nazione' => null,
        'programma' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id_adozione' => 'IdAdozione',
        'codice' => 'Codice',
        'nome' => 'Nome',
        'cognome' => 'Cognome',
        'sesso' => 'Sesso',
        'data_nascita' => 'DataNascita',
        'location' => 'Location',
        'url_foto' => 'UrlFoto',
        'nazione' => 'Nazione',
        'programma' => 'Programma'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id_adozione' => 'setIdAdozione',
        'codice' => 'setCodice',
        'nome' => 'setNome',
        'cognome' => 'setCognome',
        'sesso' => 'setSesso',
        'data_nascita' => 'setDataNascita',
        'location' => 'setLocation',
        'url_foto' => 'setUrlFoto',
        'nazione' => 'setNazione',
        'programma' => 'setProgramma'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id_adozione' => 'getIdAdozione',
        'codice' => 'getCodice',
        'nome' => 'getNome',
        'cognome' => 'getCognome',
        'sesso' => 'getSesso',
        'data_nascita' => 'getDataNascita',
        'location' => 'getLocation',
        'url_foto' => 'getUrlFoto',
        'nazione' => 'getNazione',
        'programma' => 'getProgramma'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id_adozione'] = isset($data['id_adozione']) ? $data['id_adozione'] : null;
        $this->container['codice'] = isset($data['codice']) ? $data['codice'] : null;
        $this->container['nome'] = isset($data['nome']) ? $data['nome'] : null;
        $this->container['cognome'] = isset($data['cognome']) ? $data['cognome'] : null;
        $this->container['sesso'] = isset($data['sesso']) ? $data['sesso'] : null;
        $this->container['data_nascita'] = isset($data['data_nascita']) ? $data['data_nascita'] : null;
        $this->container['location'] = isset($data['location']) ? $data['location'] : null;
        $this->container['url_foto'] = isset($data['url_foto']) ? $data['url_foto'] : null;
        $this->container['nazione'] = isset($data['nazione']) ? $data['nazione'] : null;
        $this->container['programma'] = isset($data['programma']) ? $data['programma'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id_adozione
     *
     * @return int
     */
    public function getIdAdozione()
    {
        return $this->container['id_adozione'];
    }

    /**
     * Sets id_adozione
     *
     * @param int $id_adozione id_adozione
     *
     * @return $this
     */
    public function setIdAdozione($id_adozione)
    {
        $this->container['id_adozione'] = $id_adozione;

        return $this;
    }

    /**
     * Gets codice
     *
     * @return string
     */
    public function getCodice()
    {
        return $this->container['codice'];
    }

    /**
     * Sets codice
     *
     * @param string $codice codice
     *
     * @return $this
     */
    public function setCodice($codice)
    {
        $this->container['codice'] = $codice;

        return $this;
    }

    /**
     * Gets nome
     *
     * @return string
     */
    public function getNome()
    {
        return $this->container['nome'];
    }

    /**
     * Sets nome
     *
     * @param string $nome nome
     *
     * @return $this
     */
    public function setNome($nome)
    {
        $this->container['nome'] = $nome;

        return $this;
    }

    /**
     * Gets cognome
     *
     * @return string
     */
    public function getCognome()
    {
        return $this->container['cognome'];
    }

    /**
     * Sets cognome
     *
     * @param string $cognome cognome
     *
     * @return $this
     */
    public function setCognome($cognome)
    {
        $this->container['cognome'] = $cognome;

        return $this;
    }

    /**
     * Gets sesso
     *
     * @return string
     */
    public function getSesso()
    {
        return $this->container['sesso'];
    }

    /**
     * Sets sesso
     *
     * @param string $sesso sesso
     *
     * @return $this
     */
    public function setSesso($sesso)
    {
        $this->container['sesso'] = $sesso;

        return $this;
    }

    /**
     * Gets data_nascita
     *
     * @return string
     */
    public function getDataNascita()
    {
        return $this->container['data_nascita'];
    }

    /**
     * Sets data_nascita
     *
     * @param string $data_nascita data_nascita
     *
     * @return $this
     */
    public function setDataNascita($data_nascita)
    {
        $this->container['data_nascita'] = $data_nascita;

        return $this;
    }

    /**
     * Gets location
     *
     * @return string
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param string $location location
     *
     * @return $this
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets url_foto
     *
     * @return string
     */
    public function getUrlFoto()
    {
        return $this->container['url_foto'];
    }

    /**
     * Sets url_foto
     *
     * @param string $url_foto url_foto
     *
     * @return $this
     */
    public function setUrlFoto($url_foto)
    {
        $this->container['url_foto'] = $url_foto;

        return $this;
    }

    /**
     * Gets nazione
     *
     * @return \Swagger\Client\Model\DefaultTable
     */
    public function getNazione()
    {
        return $this->container['nazione'];
    }

    /**
     * Sets nazione
     *
     * @param \Swagger\Client\Model\DefaultTable $nazione nazione
     *
     * @return $this
     */
    public function setNazione($nazione)
    {
        $this->container['nazione'] = $nazione;

        return $this;
    }

    /**
     * Gets programma
     *
     * @return \Swagger\Client\Model\DefaultTable
     */
    public function getProgramma()
    {
        return $this->container['programma'];
    }

    /**
     * Sets programma
     *
     * @param \Swagger\Client\Model\DefaultTable $programma programma
     *
     * @return $this
     */
    public function setProgramma($programma)
    {
        $this->container['programma'] = $programma;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


