<?php
/**
 * Clienti
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Mentor.ApiRest
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * Clienti Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Clienti implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Clienti';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'codice' => 'string',
        'codice_origine' => 'string',
        'tipo_master' => 'object',
        'codice_master' => 'string',
        'codice_web' => 'string',
        'codice_presentatore' => 'string',
        'tipo' => 'object',
        'sottotipo' => 'object',
        'fonte' => 'object',
        'codice_manifestazione' => 'string',
        'id_appellativo' => 'int',
        'titolo' => 'string',
        'data_raccolta' => 'string',
        'lotto' => 'string',
        'nome' => 'string',
        'cognome' => 'string',
        'ragione_sociale' => 'string',
        'genere' => 'string',
        'data_nascita' => 'string',
        'luogo_nascita' => 'string',
        'codice_fiscale' => 'string',
        'partita_iva' => 'string',
        'email1' => 'string',
        'email2' => 'string',
        'telefono1' => 'string',
        'telefono2' => 'string',
        'cellulare1' => 'string',
        'cellulare2' => 'string',
        'presso' => 'string',
        'dug' => 'string',
        'duf' => 'string',
        'civico' => 'string',
        'altro_civico' => 'string',
        'frazione' => 'string',
        'localita' => 'string',
        'provincia' => 'string',
        'cap' => 'string',
        'codice_nazione' => 'string',
        'indirizzi' => '\Swagger\Client\Model\ClientiIndirizzi[]',
        'recapiti' => '\Swagger\Client\Model\ClientiRecapiti[]',
        'campagna' => 'object',
        'id_campagna' => 'int',
        'professione' => 'object',
        'codice_tessera' => 'string',
        'evento' => 'string',
        'data_scadenza_tessera' => 'string',
        'data_emissione_tessera' => 'string',
        'flag_emissione_tessera' => 'bool',
        'privacy' => '\Swagger\Client\Model\ClientiPrivacy[]',
        'specifiche' => '\Swagger\Client\Model\ClientiSpecifiche[]',
        'profilazioni' => '\Swagger\Client\Model\ClientiProfilazioni[]',
        'subscriptions' => '\Swagger\Client\Model\ClientiSubscription[]',
        'gruppi' => '\Swagger\Client\Model\ClientiGruppi[]',
        'flag_deceduto' => 'bool',
        '_data_decesso' => 'int',
        'data_decesso' => 'string',
        'utente' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'codice' => null,
        'codice_origine' => null,
        'tipo_master' => null,
        'codice_master' => null,
        'codice_web' => null,
        'codice_presentatore' => null,
        'tipo' => null,
        'sottotipo' => null,
        'fonte' => null,
        'codice_manifestazione' => null,
        'id_appellativo' => 'int32',
        'titolo' => null,
        'data_raccolta' => null,
        'lotto' => null,
        'nome' => null,
        'cognome' => null,
        'ragione_sociale' => null,
        'genere' => null,
        'data_nascita' => null,
        'luogo_nascita' => null,
        'codice_fiscale' => null,
        'partita_iva' => null,
        'email1' => null,
        'email2' => null,
        'telefono1' => null,
        'telefono2' => null,
        'cellulare1' => null,
        'cellulare2' => null,
        'presso' => null,
        'dug' => null,
        'duf' => null,
        'civico' => null,
        'altro_civico' => null,
        'frazione' => null,
        'localita' => null,
        'provincia' => null,
        'cap' => null,
        'codice_nazione' => null,
        'indirizzi' => null,
        'recapiti' => null,
        'campagna' => null,
        'id_campagna' => 'int32',
        'professione' => null,
        'codice_tessera' => null,
        'evento' => null,
        'data_scadenza_tessera' => null,
        'data_emissione_tessera' => null,
        'flag_emissione_tessera' => null,
        'privacy' => null,
        'specifiche' => null,
        'profilazioni' => null,
        'subscriptions' => null,
        'gruppi' => null,
        'flag_deceduto' => null,
        '_data_decesso' => 'int32',
        'data_decesso' => null,
        'utente' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'codice' => 'Codice',
        'codice_origine' => 'CodiceOrigine',
        'tipo_master' => 'TipoMaster',
        'codice_master' => 'CodiceMaster',
        'codice_web' => 'CodiceWeb',
        'codice_presentatore' => 'codicePresentatore',
        'tipo' => 'Tipo',
        'sottotipo' => 'Sottotipo',
        'fonte' => 'Fonte',
        'codice_manifestazione' => 'CodiceManifestazione',
        'id_appellativo' => 'IdAppellativo',
        'titolo' => 'Titolo',
        'data_raccolta' => 'DataRaccolta',
        'lotto' => 'Lotto',
        'nome' => 'Nome',
        'cognome' => 'Cognome',
        'ragione_sociale' => 'RagioneSociale',
        'genere' => 'Genere',
        'data_nascita' => 'DataNascita',
        'luogo_nascita' => 'LuogoNascita',
        'codice_fiscale' => 'CodiceFiscale',
        'partita_iva' => 'PartitaIva',
        'email1' => 'Email1',
        'email2' => 'Email2',
        'telefono1' => 'Telefono1',
        'telefono2' => 'Telefono2',
        'cellulare1' => 'Cellulare1',
        'cellulare2' => 'Cellulare2',
        'presso' => 'Presso',
        'dug' => 'Dug',
        'duf' => 'Duf',
        'civico' => 'Civico',
        'altro_civico' => 'AltroCivico',
        'frazione' => 'Frazione',
        'localita' => 'Localita',
        'provincia' => 'Provincia',
        'cap' => 'Cap',
        'codice_nazione' => 'CodiceNazione',
        'indirizzi' => 'Indirizzi',
        'recapiti' => 'Recapiti',
        'campagna' => 'Campagna',
        'id_campagna' => 'IdCampagna',
        'professione' => 'Professione',
        'codice_tessera' => 'codiceTessera',
        'evento' => 'Evento',
        'data_scadenza_tessera' => 'dataScadenzaTessera',
        'data_emissione_tessera' => 'dataEmissioneTessera',
        'flag_emissione_tessera' => 'flagEmissioneTessera',
        'privacy' => 'Privacy',
        'specifiche' => 'Specifiche',
        'profilazioni' => 'Profilazioni',
        'subscriptions' => 'Subscriptions',
        'gruppi' => 'Gruppi',
        'flag_deceduto' => 'flagDeceduto',
        '_data_decesso' => '_dataDecesso',
        'data_decesso' => 'dataDecesso',
        'utente' => 'Utente'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'codice' => 'setCodice',
        'codice_origine' => 'setCodiceOrigine',
        'tipo_master' => 'setTipoMaster',
        'codice_master' => 'setCodiceMaster',
        'codice_web' => 'setCodiceWeb',
        'codice_presentatore' => 'setCodicePresentatore',
        'tipo' => 'setTipo',
        'sottotipo' => 'setSottotipo',
        'fonte' => 'setFonte',
        'codice_manifestazione' => 'setCodiceManifestazione',
        'id_appellativo' => 'setIdAppellativo',
        'titolo' => 'setTitolo',
        'data_raccolta' => 'setDataRaccolta',
        'lotto' => 'setLotto',
        'nome' => 'setNome',
        'cognome' => 'setCognome',
        'ragione_sociale' => 'setRagioneSociale',
        'genere' => 'setGenere',
        'data_nascita' => 'setDataNascita',
        'luogo_nascita' => 'setLuogoNascita',
        'codice_fiscale' => 'setCodiceFiscale',
        'partita_iva' => 'setPartitaIva',
        'email1' => 'setEmail1',
        'email2' => 'setEmail2',
        'telefono1' => 'setTelefono1',
        'telefono2' => 'setTelefono2',
        'cellulare1' => 'setCellulare1',
        'cellulare2' => 'setCellulare2',
        'presso' => 'setPresso',
        'dug' => 'setDug',
        'duf' => 'setDuf',
        'civico' => 'setCivico',
        'altro_civico' => 'setAltroCivico',
        'frazione' => 'setFrazione',
        'localita' => 'setLocalita',
        'provincia' => 'setProvincia',
        'cap' => 'setCap',
        'codice_nazione' => 'setCodiceNazione',
        'indirizzi' => 'setIndirizzi',
        'recapiti' => 'setRecapiti',
        'campagna' => 'setCampagna',
        'id_campagna' => 'setIdCampagna',
        'professione' => 'setProfessione',
        'codice_tessera' => 'setCodiceTessera',
        'evento' => 'setEvento',
        'data_scadenza_tessera' => 'setDataScadenzaTessera',
        'data_emissione_tessera' => 'setDataEmissioneTessera',
        'flag_emissione_tessera' => 'setFlagEmissioneTessera',
        'privacy' => 'setPrivacy',
        'specifiche' => 'setSpecifiche',
        'profilazioni' => 'setProfilazioni',
        'subscriptions' => 'setSubscriptions',
        'gruppi' => 'setGruppi',
        'flag_deceduto' => 'setFlagDeceduto',
        '_data_decesso' => 'setDataDecesso',
        'data_decesso' => 'setDataDecesso',
        'utente' => 'setUtente'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'codice' => 'getCodice',
        'codice_origine' => 'getCodiceOrigine',
        'tipo_master' => 'getTipoMaster',
        'codice_master' => 'getCodiceMaster',
        'codice_web' => 'getCodiceWeb',
        'codice_presentatore' => 'getCodicePresentatore',
        'tipo' => 'getTipo',
        'sottotipo' => 'getSottotipo',
        'fonte' => 'getFonte',
        'codice_manifestazione' => 'getCodiceManifestazione',
        'id_appellativo' => 'getIdAppellativo',
        'titolo' => 'getTitolo',
        'data_raccolta' => 'getDataRaccolta',
        'lotto' => 'getLotto',
        'nome' => 'getNome',
        'cognome' => 'getCognome',
        'ragione_sociale' => 'getRagioneSociale',
        'genere' => 'getGenere',
        'data_nascita' => 'getDataNascita',
        'luogo_nascita' => 'getLuogoNascita',
        'codice_fiscale' => 'getCodiceFiscale',
        'partita_iva' => 'getPartitaIva',
        'email1' => 'getEmail1',
        'email2' => 'getEmail2',
        'telefono1' => 'getTelefono1',
        'telefono2' => 'getTelefono2',
        'cellulare1' => 'getCellulare1',
        'cellulare2' => 'getCellulare2',
        'presso' => 'getPresso',
        'dug' => 'getDug',
        'duf' => 'getDuf',
        'civico' => 'getCivico',
        'altro_civico' => 'getAltroCivico',
        'frazione' => 'getFrazione',
        'localita' => 'getLocalita',
        'provincia' => 'getProvincia',
        'cap' => 'getCap',
        'codice_nazione' => 'getCodiceNazione',
        'indirizzi' => 'getIndirizzi',
        'recapiti' => 'getRecapiti',
        'campagna' => 'getCampagna',
        'id_campagna' => 'getIdCampagna',
        'professione' => 'getProfessione',
        'codice_tessera' => 'getCodiceTessera',
        'evento' => 'getEvento',
        'data_scadenza_tessera' => 'getDataScadenzaTessera',
        'data_emissione_tessera' => 'getDataEmissioneTessera',
        'flag_emissione_tessera' => 'getFlagEmissioneTessera',
        'privacy' => 'getPrivacy',
        'specifiche' => 'getSpecifiche',
        'profilazioni' => 'getProfilazioni',
        'subscriptions' => 'getSubscriptions',
        'gruppi' => 'getGruppi',
        'flag_deceduto' => 'getFlagDeceduto',
        '_data_decesso' => 'getDataDecesso',
        'data_decesso' => 'getDataDecesso',
        'utente' => 'getUtente'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['codice'] = isset($data['codice']) ? $data['codice'] : null;
        $this->container['codice_origine'] = isset($data['codice_origine']) ? $data['codice_origine'] : null;
        $this->container['tipo_master'] = isset($data['tipo_master']) ? $data['tipo_master'] : null;
        $this->container['codice_master'] = isset($data['codice_master']) ? $data['codice_master'] : null;
        $this->container['codice_web'] = isset($data['codice_web']) ? $data['codice_web'] : null;
        $this->container['codice_presentatore'] = isset($data['codice_presentatore']) ? $data['codice_presentatore'] : null;
        $this->container['tipo'] = isset($data['tipo']) ? $data['tipo'] : null;
        $this->container['sottotipo'] = isset($data['sottotipo']) ? $data['sottotipo'] : null;
        $this->container['fonte'] = isset($data['fonte']) ? $data['fonte'] : null;
        $this->container['codice_manifestazione'] = isset($data['codice_manifestazione']) ? $data['codice_manifestazione'] : null;
        $this->container['id_appellativo'] = isset($data['id_appellativo']) ? $data['id_appellativo'] : null;
        $this->container['titolo'] = isset($data['titolo']) ? $data['titolo'] : null;
        $this->container['data_raccolta'] = isset($data['data_raccolta']) ? $data['data_raccolta'] : null;
        $this->container['lotto'] = isset($data['lotto']) ? $data['lotto'] : null;
        $this->container['nome'] = isset($data['nome']) ? $data['nome'] : null;
        $this->container['cognome'] = isset($data['cognome']) ? $data['cognome'] : null;
        $this->container['ragione_sociale'] = isset($data['ragione_sociale']) ? $data['ragione_sociale'] : null;
        $this->container['genere'] = isset($data['genere']) ? $data['genere'] : null;
        $this->container['data_nascita'] = isset($data['data_nascita']) ? $data['data_nascita'] : null;
        $this->container['luogo_nascita'] = isset($data['luogo_nascita']) ? $data['luogo_nascita'] : null;
        $this->container['codice_fiscale'] = isset($data['codice_fiscale']) ? $data['codice_fiscale'] : null;
        $this->container['partita_iva'] = isset($data['partita_iva']) ? $data['partita_iva'] : null;
        $this->container['email1'] = isset($data['email1']) ? $data['email1'] : null;
        $this->container['email2'] = isset($data['email2']) ? $data['email2'] : null;
        $this->container['telefono1'] = isset($data['telefono1']) ? $data['telefono1'] : null;
        $this->container['telefono2'] = isset($data['telefono2']) ? $data['telefono2'] : null;
        $this->container['cellulare1'] = isset($data['cellulare1']) ? $data['cellulare1'] : null;
        $this->container['cellulare2'] = isset($data['cellulare2']) ? $data['cellulare2'] : null;
        $this->container['presso'] = isset($data['presso']) ? $data['presso'] : null;
        $this->container['dug'] = isset($data['dug']) ? $data['dug'] : null;
        $this->container['duf'] = isset($data['duf']) ? $data['duf'] : null;
        $this->container['civico'] = isset($data['civico']) ? $data['civico'] : null;
        $this->container['altro_civico'] = isset($data['altro_civico']) ? $data['altro_civico'] : null;
        $this->container['frazione'] = isset($data['frazione']) ? $data['frazione'] : null;
        $this->container['localita'] = isset($data['localita']) ? $data['localita'] : null;
        $this->container['provincia'] = isset($data['provincia']) ? $data['provincia'] : null;
        $this->container['cap'] = isset($data['cap']) ? $data['cap'] : null;
        $this->container['codice_nazione'] = isset($data['codice_nazione']) ? $data['codice_nazione'] : null;
        $this->container['indirizzi'] = isset($data['indirizzi']) ? $data['indirizzi'] : null;
        $this->container['recapiti'] = isset($data['recapiti']) ? $data['recapiti'] : null;
        $this->container['campagna'] = isset($data['campagna']) ? $data['campagna'] : null;
        $this->container['id_campagna'] = isset($data['id_campagna']) ? $data['id_campagna'] : null;
        $this->container['professione'] = isset($data['professione']) ? $data['professione'] : null;
        $this->container['codice_tessera'] = isset($data['codice_tessera']) ? $data['codice_tessera'] : null;
        $this->container['evento'] = isset($data['evento']) ? $data['evento'] : null;
        $this->container['data_scadenza_tessera'] = isset($data['data_scadenza_tessera']) ? $data['data_scadenza_tessera'] : null;
        $this->container['data_emissione_tessera'] = isset($data['data_emissione_tessera']) ? $data['data_emissione_tessera'] : null;
        $this->container['flag_emissione_tessera'] = isset($data['flag_emissione_tessera']) ? $data['flag_emissione_tessera'] : null;
        $this->container['privacy'] = isset($data['privacy']) ? $data['privacy'] : null;
        $this->container['specifiche'] = isset($data['specifiche']) ? $data['specifiche'] : null;
        $this->container['profilazioni'] = isset($data['profilazioni']) ? $data['profilazioni'] : null;
        $this->container['subscriptions'] = isset($data['subscriptions']) ? $data['subscriptions'] : null;
        $this->container['gruppi'] = isset($data['gruppi']) ? $data['gruppi'] : null;
        $this->container['flag_deceduto'] = isset($data['flag_deceduto']) ? $data['flag_deceduto'] : null;
        $this->container['_data_decesso'] = isset($data['_data_decesso']) ? $data['_data_decesso'] : null;
        $this->container['data_decesso'] = isset($data['data_decesso']) ? $data['data_decesso'] : null;
        $this->container['utente'] = isset($data['utente']) ? $data['utente'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets codice
     *
     * @return string
     */
    public function getCodice()
    {
        return $this->container['codice'];
    }

    /**
     * Sets codice
     *
     * @param string $codice codice
     *
     * @return $this
     */
    public function setCodice($codice)
    {
        $this->container['codice'] = $codice;

        return $this;
    }

    /**
     * Gets codice_origine
     *
     * @return string
     */
    public function getCodiceOrigine()
    {
        return $this->container['codice_origine'];
    }

    /**
     * Sets codice_origine
     *
     * @param string $codice_origine codice_origine
     *
     * @return $this
     */
    public function setCodiceOrigine($codice_origine)
    {
        $this->container['codice_origine'] = $codice_origine;

        return $this;
    }

    /**
     * Gets tipo_master
     *
     * @return object
     */
    public function getTipoMaster()
    {
        return $this->container['tipo_master'];
    }

    /**
     * Sets tipo_master
     *
     * @param object $tipo_master tipo_master
     *
     * @return $this
     */
    public function setTipoMaster($tipo_master)
    {
        $this->container['tipo_master'] = $tipo_master;

        return $this;
    }

    /**
     * Gets codice_master
     *
     * @return string
     */
    public function getCodiceMaster()
    {
        return $this->container['codice_master'];
    }

    /**
     * Sets codice_master
     *
     * @param string $codice_master codice_master
     *
     * @return $this
     */
    public function setCodiceMaster($codice_master)
    {
        $this->container['codice_master'] = $codice_master;

        return $this;
    }

    /**
     * Gets codice_web
     *
     * @return string
     */
    public function getCodiceWeb()
    {
        return $this->container['codice_web'];
    }

    /**
     * Sets codice_web
     *
     * @param string $codice_web codice_web
     *
     * @return $this
     */
    public function setCodiceWeb($codice_web)
    {
        $this->container['codice_web'] = $codice_web;

        return $this;
    }

    /**
     * Gets codice_presentatore
     *
     * @return string
     */
    public function getCodicePresentatore()
    {
        return $this->container['codice_presentatore'];
    }

    /**
     * Sets codice_presentatore
     *
     * @param string $codice_presentatore codice_presentatore
     *
     * @return $this
     */
    public function setCodicePresentatore($codice_presentatore)
    {
        $this->container['codice_presentatore'] = $codice_presentatore;

        return $this;
    }

    /**
     * Gets tipo
     *
     * @return object
     */
    public function getTipo()
    {
        return $this->container['tipo'];
    }

    /**
     * Sets tipo
     *
     * @param object $tipo tipo
     *
     * @return $this
     */
    public function setTipo($tipo)
    {
        $this->container['tipo'] = $tipo;

        return $this;
    }

    /**
     * Gets sottotipo
     *
     * @return object
     */
    public function getSottotipo()
    {
        return $this->container['sottotipo'];
    }

    /**
     * Sets sottotipo
     *
     * @param object $sottotipo sottotipo
     *
     * @return $this
     */
    public function setSottotipo($sottotipo)
    {
        $this->container['sottotipo'] = $sottotipo;

        return $this;
    }

    /**
     * Gets fonte
     *
     * @return object
     */
    public function getFonte()
    {
        return $this->container['fonte'];
    }

    /**
     * Sets fonte
     *
     * @param object $fonte fonte
     *
     * @return $this
     */
    public function setFonte($fonte)
    {
        $this->container['fonte'] = $fonte;

        return $this;
    }

    /**
     * Gets codice_manifestazione
     *
     * @return string
     */
    public function getCodiceManifestazione()
    {
        return $this->container['codice_manifestazione'];
    }

    /**
     * Sets codice_manifestazione
     *
     * @param string $codice_manifestazione codice_manifestazione
     *
     * @return $this
     */
    public function setCodiceManifestazione($codice_manifestazione)
    {
        $this->container['codice_manifestazione'] = $codice_manifestazione;

        return $this;
    }

    /**
     * Gets id_appellativo
     *
     * @return int
     */
    public function getIdAppellativo()
    {
        return $this->container['id_appellativo'];
    }

    /**
     * Sets id_appellativo
     *
     * @param int $id_appellativo id_appellativo
     *
     * @return $this
     */
    public function setIdAppellativo($id_appellativo)
    {
        $this->container['id_appellativo'] = $id_appellativo;

        return $this;
    }

    /**
     * Gets titolo
     *
     * @return string
     */
    public function getTitolo()
    {
        return $this->container['titolo'];
    }

    /**
     * Sets titolo
     *
     * @param string $titolo titolo
     *
     * @return $this
     */
    public function setTitolo($titolo)
    {
        $this->container['titolo'] = $titolo;

        return $this;
    }

    /**
     * Gets data_raccolta
     *
     * @return string
     */
    public function getDataRaccolta()
    {
        return $this->container['data_raccolta'];
    }

    /**
     * Sets data_raccolta
     *
     * @param string $data_raccolta data_raccolta
     *
     * @return $this
     */
    public function setDataRaccolta($data_raccolta)
    {
        $this->container['data_raccolta'] = $data_raccolta;

        return $this;
    }

    /**
     * Gets lotto
     *
     * @return string
     */
    public function getLotto()
    {
        return $this->container['lotto'];
    }

    /**
     * Sets lotto
     *
     * @param string $lotto lotto
     *
     * @return $this
     */
    public function setLotto($lotto)
    {
        $this->container['lotto'] = $lotto;

        return $this;
    }

    /**
     * Gets nome
     *
     * @return string
     */
    public function getNome()
    {
        return $this->container['nome'];
    }

    /**
     * Sets nome
     *
     * @param string $nome nome
     *
     * @return $this
     */
    public function setNome($nome)
    {
        $this->container['nome'] = $nome;

        return $this;
    }

    /**
     * Gets cognome
     *
     * @return string
     */
    public function getCognome()
    {
        return $this->container['cognome'];
    }

    /**
     * Sets cognome
     *
     * @param string $cognome cognome
     *
     * @return $this
     */
    public function setCognome($cognome)
    {
        $this->container['cognome'] = $cognome;

        return $this;
    }

    /**
     * Gets ragione_sociale
     *
     * @return string
     */
    public function getRagioneSociale()
    {
        return $this->container['ragione_sociale'];
    }

    /**
     * Sets ragione_sociale
     *
     * @param string $ragione_sociale ragione_sociale
     *
     * @return $this
     */
    public function setRagioneSociale($ragione_sociale)
    {
        $this->container['ragione_sociale'] = $ragione_sociale;

        return $this;
    }

    /**
     * Gets genere
     *
     * @return string
     */
    public function getGenere()
    {
        return $this->container['genere'];
    }

    /**
     * Sets genere
     *
     * @param string $genere genere
     *
     * @return $this
     */
    public function setGenere($genere)
    {
        $this->container['genere'] = $genere;

        return $this;
    }

    /**
     * Gets data_nascita
     *
     * @return string
     */
    public function getDataNascita()
    {
        return $this->container['data_nascita'];
    }

    /**
     * Sets data_nascita
     *
     * @param string $data_nascita data_nascita
     *
     * @return $this
     */
    public function setDataNascita($data_nascita)
    {
        $this->container['data_nascita'] = $data_nascita;

        return $this;
    }

    /**
     * Gets luogo_nascita
     *
     * @return string
     */
    public function getLuogoNascita()
    {
        return $this->container['luogo_nascita'];
    }

    /**
     * Sets luogo_nascita
     *
     * @param string $luogo_nascita luogo_nascita
     *
     * @return $this
     */
    public function setLuogoNascita($luogo_nascita)
    {
        $this->container['luogo_nascita'] = $luogo_nascita;

        return $this;
    }

    /**
     * Gets codice_fiscale
     *
     * @return string
     */
    public function getCodiceFiscale()
    {
        return $this->container['codice_fiscale'];
    }

    /**
     * Sets codice_fiscale
     *
     * @param string $codice_fiscale codice_fiscale
     *
     * @return $this
     */
    public function setCodiceFiscale($codice_fiscale)
    {
        $this->container['codice_fiscale'] = $codice_fiscale;

        return $this;
    }

    /**
     * Gets partita_iva
     *
     * @return string
     */
    public function getPartitaIva()
    {
        return $this->container['partita_iva'];
    }

    /**
     * Sets partita_iva
     *
     * @param string $partita_iva partita_iva
     *
     * @return $this
     */
    public function setPartitaIva($partita_iva)
    {
        $this->container['partita_iva'] = $partita_iva;

        return $this;
    }

    /**
     * Gets email1
     *
     * @return string
     */
    public function getEmail1()
    {
        return $this->container['email1'];
    }

    /**
     * Sets email1
     *
     * @param string $email1 email1
     *
     * @return $this
     */
    public function setEmail1($email1)
    {
        $this->container['email1'] = $email1;

        return $this;
    }

    /**
     * Gets email2
     *
     * @return string
     */
    public function getEmail2()
    {
        return $this->container['email2'];
    }

    /**
     * Sets email2
     *
     * @param string $email2 email2
     *
     * @return $this
     */
    public function setEmail2($email2)
    {
        $this->container['email2'] = $email2;

        return $this;
    }

    /**
     * Gets telefono1
     *
     * @return string
     */
    public function getTelefono1()
    {
        return $this->container['telefono1'];
    }

    /**
     * Sets telefono1
     *
     * @param string $telefono1 telefono1
     *
     * @return $this
     */
    public function setTelefono1($telefono1)
    {
        $this->container['telefono1'] = $telefono1;

        return $this;
    }

    /**
     * Gets telefono2
     *
     * @return string
     */
    public function getTelefono2()
    {
        return $this->container['telefono2'];
    }

    /**
     * Sets telefono2
     *
     * @param string $telefono2 telefono2
     *
     * @return $this
     */
    public function setTelefono2($telefono2)
    {
        $this->container['telefono2'] = $telefono2;

        return $this;
    }

    /**
     * Gets cellulare1
     *
     * @return string
     */
    public function getCellulare1()
    {
        return $this->container['cellulare1'];
    }

    /**
     * Sets cellulare1
     *
     * @param string $cellulare1 cellulare1
     *
     * @return $this
     */
    public function setCellulare1($cellulare1)
    {
        $this->container['cellulare1'] = $cellulare1;

        return $this;
    }

    /**
     * Gets cellulare2
     *
     * @return string
     */
    public function getCellulare2()
    {
        return $this->container['cellulare2'];
    }

    /**
     * Sets cellulare2
     *
     * @param string $cellulare2 cellulare2
     *
     * @return $this
     */
    public function setCellulare2($cellulare2)
    {
        $this->container['cellulare2'] = $cellulare2;

        return $this;
    }

    /**
     * Gets presso
     *
     * @return string
     */
    public function getPresso()
    {
        return $this->container['presso'];
    }

    /**
     * Sets presso
     *
     * @param string $presso presso
     *
     * @return $this
     */
    public function setPresso($presso)
    {
        $this->container['presso'] = $presso;

        return $this;
    }

    /**
     * Gets dug
     *
     * @return string
     */
    public function getDug()
    {
        return $this->container['dug'];
    }

    /**
     * Sets dug
     *
     * @param string $dug dug
     *
     * @return $this
     */
    public function setDug($dug)
    {
        $this->container['dug'] = $dug;

        return $this;
    }

    /**
     * Gets duf
     *
     * @return string
     */
    public function getDuf()
    {
        return $this->container['duf'];
    }

    /**
     * Sets duf
     *
     * @param string $duf duf
     *
     * @return $this
     */
    public function setDuf($duf)
    {
        $this->container['duf'] = $duf;

        return $this;
    }

    /**
     * Gets civico
     *
     * @return string
     */
    public function getCivico()
    {
        return $this->container['civico'];
    }

    /**
     * Sets civico
     *
     * @param string $civico civico
     *
     * @return $this
     */
    public function setCivico($civico)
    {
        $this->container['civico'] = $civico;

        return $this;
    }

    /**
     * Gets altro_civico
     *
     * @return string
     */
    public function getAltroCivico()
    {
        return $this->container['altro_civico'];
    }

    /**
     * Sets altro_civico
     *
     * @param string $altro_civico altro_civico
     *
     * @return $this
     */
    public function setAltroCivico($altro_civico)
    {
        $this->container['altro_civico'] = $altro_civico;

        return $this;
    }

    /**
     * Gets frazione
     *
     * @return string
     */
    public function getFrazione()
    {
        return $this->container['frazione'];
    }

    /**
     * Sets frazione
     *
     * @param string $frazione frazione
     *
     * @return $this
     */
    public function setFrazione($frazione)
    {
        $this->container['frazione'] = $frazione;

        return $this;
    }

    /**
     * Gets localita
     *
     * @return string
     */
    public function getLocalita()
    {
        return $this->container['localita'];
    }

    /**
     * Sets localita
     *
     * @param string $localita localita
     *
     * @return $this
     */
    public function setLocalita($localita)
    {
        $this->container['localita'] = $localita;

        return $this;
    }

    /**
     * Gets provincia
     *
     * @return string
     */
    public function getProvincia()
    {
        return $this->container['provincia'];
    }

    /**
     * Sets provincia
     *
     * @param string $provincia provincia
     *
     * @return $this
     */
    public function setProvincia($provincia)
    {
        $this->container['provincia'] = $provincia;

        return $this;
    }

    /**
     * Gets cap
     *
     * @return string
     */
    public function getCap()
    {
        return $this->container['cap'];
    }

    /**
     * Sets cap
     *
     * @param string $cap cap
     *
     * @return $this
     */
    public function setCap($cap)
    {
        $this->container['cap'] = $cap;

        return $this;
    }

    /**
     * Gets codice_nazione
     *
     * @return string
     */
    public function getCodiceNazione()
    {
        return $this->container['codice_nazione'];
    }

    /**
     * Sets codice_nazione
     *
     * @param string $codice_nazione codice_nazione
     *
     * @return $this
     */
    public function setCodiceNazione($codice_nazione)
    {
        $this->container['codice_nazione'] = $codice_nazione;

        return $this;
    }

    /**
     * Gets indirizzi
     *
     * @return \Swagger\Client\Model\ClientiIndirizzi[]
     */
    public function getIndirizzi()
    {
        return $this->container['indirizzi'];
    }

    /**
     * Sets indirizzi
     *
     * @param \Swagger\Client\Model\ClientiIndirizzi[] $indirizzi indirizzi
     *
     * @return $this
     */
    public function setIndirizzi($indirizzi)
    {
        $this->container['indirizzi'] = $indirizzi;

        return $this;
    }

    /**
     * Gets recapiti
     *
     * @return \Swagger\Client\Model\ClientiRecapiti[]
     */
    public function getRecapiti()
    {
        return $this->container['recapiti'];
    }

    /**
     * Sets recapiti
     *
     * @param \Swagger\Client\Model\ClientiRecapiti[] $recapiti recapiti
     *
     * @return $this
     */
    public function setRecapiti($recapiti)
    {
        $this->container['recapiti'] = $recapiti;

        return $this;
    }

    /**
     * Gets campagna
     *
     * @return object
     */
    public function getCampagna()
    {
        return $this->container['campagna'];
    }

    /**
     * Sets campagna
     *
     * @param object $campagna campagna
     *
     * @return $this
     */
    public function setCampagna($campagna)
    {
        $this->container['campagna'] = $campagna;

        return $this;
    }

    /**
     * Gets id_campagna
     *
     * @return int
     */
    public function getIdCampagna()
    {
        return $this->container['id_campagna'];
    }

    /**
     * Sets id_campagna
     *
     * @param int $id_campagna id_campagna
     *
     * @return $this
     */
    public function setIdCampagna($id_campagna)
    {
        $this->container['id_campagna'] = $id_campagna;

        return $this;
    }

    /**
     * Gets professione
     *
     * @return object
     */
    public function getProfessione()
    {
        return $this->container['professione'];
    }

    /**
     * Sets professione
     *
     * @param object $professione professione
     *
     * @return $this
     */
    public function setProfessione($professione)
    {
        $this->container['professione'] = $professione;

        return $this;
    }

    /**
     * Gets codice_tessera
     *
     * @return string
     */
    public function getCodiceTessera()
    {
        return $this->container['codice_tessera'];
    }

    /**
     * Sets codice_tessera
     *
     * @param string $codice_tessera codice_tessera
     *
     * @return $this
     */
    public function setCodiceTessera($codice_tessera)
    {
        $this->container['codice_tessera'] = $codice_tessera;

        return $this;
    }

    /**
     * Gets evento
     *
     * @return string
     */
    public function getEvento()
    {
        return $this->container['evento'];
    }

    /**
     * Sets evento
     *
     * @param string $evento evento
     *
     * @return $this
     */
    public function setEvento($evento)
    {
        $this->container['evento'] = $evento;

        return $this;
    }

    /**
     * Gets data_scadenza_tessera
     *
     * @return string
     */
    public function getDataScadenzaTessera()
    {
        return $this->container['data_scadenza_tessera'];
    }

    /**
     * Sets data_scadenza_tessera
     *
     * @param string $data_scadenza_tessera data_scadenza_tessera
     *
     * @return $this
     */
    public function setDataScadenzaTessera($data_scadenza_tessera)
    {
        $this->container['data_scadenza_tessera'] = $data_scadenza_tessera;

        return $this;
    }

    /**
     * Gets data_emissione_tessera
     *
     * @return string
     */
    public function getDataEmissioneTessera()
    {
        return $this->container['data_emissione_tessera'];
    }

    /**
     * Sets data_emissione_tessera
     *
     * @param string $data_emissione_tessera data_emissione_tessera
     *
     * @return $this
     */
    public function setDataEmissioneTessera($data_emissione_tessera)
    {
        $this->container['data_emissione_tessera'] = $data_emissione_tessera;

        return $this;
    }

    /**
     * Gets flag_emissione_tessera
     *
     * @return bool
     */
    public function getFlagEmissioneTessera()
    {
        return $this->container['flag_emissione_tessera'];
    }

    /**
     * Sets flag_emissione_tessera
     *
     * @param bool $flag_emissione_tessera flag_emissione_tessera
     *
     * @return $this
     */
    public function setFlagEmissioneTessera($flag_emissione_tessera)
    {
        $this->container['flag_emissione_tessera'] = $flag_emissione_tessera;

        return $this;
    }

    /**
     * Gets privacy
     *
     * @return \Swagger\Client\Model\ClientiPrivacy[]
     */
    public function getPrivacy()
    {
        return $this->container['privacy'];
    }

    /**
     * Sets privacy
     *
     * @param \Swagger\Client\Model\ClientiPrivacy[] $privacy privacy
     *
     * @return $this
     */
    public function setPrivacy($privacy)
    {
        $this->container['privacy'] = $privacy;

        return $this;
    }

    /**
     * Gets specifiche
     *
     * @return \Swagger\Client\Model\ClientiSpecifiche[]
     */
    public function getSpecifiche()
    {
        return $this->container['specifiche'];
    }

    /**
     * Sets specifiche
     *
     * @param \Swagger\Client\Model\ClientiSpecifiche[] $specifiche specifiche
     *
     * @return $this
     */
    public function setSpecifiche($specifiche)
    {
        $this->container['specifiche'] = $specifiche;

        return $this;
    }

    /**
     * Gets profilazioni
     *
     * @return \Swagger\Client\Model\ClientiProfilazioni[]
     */
    public function getProfilazioni()
    {
        return $this->container['profilazioni'];
    }

    /**
     * Sets profilazioni
     *
     * @param \Swagger\Client\Model\ClientiProfilazioni[] $profilazioni profilazioni
     *
     * @return $this
     */
    public function setProfilazioni($profilazioni)
    {
        $this->container['profilazioni'] = $profilazioni;

        return $this;
    }

    /**
     * Gets subscriptions
     *
     * @return \Swagger\Client\Model\ClientiSubscription[]
     */
    public function getSubscriptions()
    {
        return $this->container['subscriptions'];
    }

    /**
     * Sets subscriptions
     *
     * @param \Swagger\Client\Model\ClientiSubscription[] $subscriptions subscriptions
     *
     * @return $this
     */
    public function setSubscriptions($subscriptions)
    {
        $this->container['subscriptions'] = $subscriptions;

        return $this;
    }

    /**
     * Gets gruppi
     *
     * @return \Swagger\Client\Model\ClientiGruppi[]
     */
    public function getGruppi()
    {
        return $this->container['gruppi'];
    }

    /**
     * Sets gruppi
     *
     * @param \Swagger\Client\Model\ClientiGruppi[] $gruppi gruppi
     *
     * @return $this
     */
    public function setGruppi($gruppi)
    {
        $this->container['gruppi'] = $gruppi;

        return $this;
    }

    /**
     * Gets flag_deceduto
     *
     * @return bool
     */
    public function getFlagDeceduto()
    {
        return $this->container['flag_deceduto'];
    }

    /**
     * Sets flag_deceduto
     *
     * @param bool $flag_deceduto flag_deceduto
     *
     * @return $this
     */
    public function setFlagDeceduto($flag_deceduto)
    {
        $this->container['flag_deceduto'] = $flag_deceduto;

        return $this;
    }

    /**
     * Gets _data_decesso
     *
     * @return int
     */
    public function getDataDecesso()
    {
        return $this->container['_data_decesso'];
    }

    /**
     * Sets _data_decesso
     *
     * @param int $_data_decesso _data_decesso
     *
     * @return $this
     */
    public function setDataDecesso($_data_decesso)
    {
        $this->container['_data_decesso'] = $_data_decesso;

        return $this;
    }

    /**
     * Gets data_decesso
     *
     * @return string
     */
    public function getDataDecesso()
    {
        return $this->container['data_decesso'];
    }

    /**
     * Sets data_decesso
     *
     * @param string $data_decesso data_decesso
     *
     * @return $this
     */
    public function setDataDecesso($data_decesso)
    {
        $this->container['data_decesso'] = $data_decesso;

        return $this;
    }

    /**
     * Gets utente
     *
     * @return string
     */
    public function getUtente()
    {
        return $this->container['utente'];
    }

    /**
     * Sets utente
     *
     * @param string $utente utente
     *
     * @return $this
     */
    public function setUtente($utente)
    {
        $this->container['utente'] = $utente;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


