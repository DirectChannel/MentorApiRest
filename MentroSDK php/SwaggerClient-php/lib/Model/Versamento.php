<?php
/**
 * Versamento
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Mentor.ApiRest
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.17
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * Versamento Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Versamento implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Versamento';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id_versamento' => 'int',
        'id_regolare' => 'int',
        'id_web' => 'string',
        'codice_cliente' => 'string',
        'codice_soggetto_versante' => 'string',
        'codice_centro_ricavo' => 'string',
        'codice_partner' => 'string',
        'codice_riferimento' => 'string',
        'campagna' => 'object',
        'centro' => 'object',
        'canale' => 'object',
        'bambino' => 'object',
        'progetto' => 'object',
        'conto' => 'object',
        'evento' => 'object',
        'codice_transazione' => 'string',
        'importo' => 'float',
        'metodo' => 'string',
        'descrizione_metodo' => 'string',
        'data_operazione' => 'string',
        'data_valuta' => 'string',
        'note' => 'string',
        'tipo' => 'object',
        'sotto_tipo' => 'object',
        'lotto' => 'string',
        'escludi_attestato' => 'string',
        'flag_one_off' => 'bool',
        'prodotti' => '\Swagger\Client\Model\VersamentoProdotti[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id_versamento' => 'int32',
        'id_regolare' => 'int32',
        'id_web' => null,
        'codice_cliente' => null,
        'codice_soggetto_versante' => null,
        'codice_centro_ricavo' => null,
        'codice_partner' => null,
        'codice_riferimento' => null,
        'campagna' => null,
        'centro' => null,
        'canale' => null,
        'bambino' => null,
        'progetto' => null,
        'conto' => null,
        'evento' => null,
        'codice_transazione' => null,
        'importo' => 'float',
        'metodo' => null,
        'descrizione_metodo' => null,
        'data_operazione' => null,
        'data_valuta' => null,
        'note' => null,
        'tipo' => null,
        'sotto_tipo' => null,
        'lotto' => null,
        'escludi_attestato' => null,
        'flag_one_off' => null,
        'prodotti' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id_versamento' => 'idVersamento',
        'id_regolare' => 'idRegolare',
        'id_web' => 'idWeb',
        'codice_cliente' => 'CodiceCliente',
        'codice_soggetto_versante' => 'CodiceSoggettoVersante',
        'codice_centro_ricavo' => 'codiceCentroRicavo',
        'codice_partner' => 'CodicePartner',
        'codice_riferimento' => 'CodiceRiferimento',
        'campagna' => 'Campagna',
        'centro' => 'Centro',
        'canale' => 'Canale',
        'bambino' => 'Bambino',
        'progetto' => 'Progetto',
        'conto' => 'Conto',
        'evento' => 'Evento',
        'codice_transazione' => 'CodiceTransazione',
        'importo' => 'Importo',
        'metodo' => 'Metodo',
        'descrizione_metodo' => 'DescrizioneMetodo',
        'data_operazione' => 'DataOperazione',
        'data_valuta' => 'DataValuta',
        'note' => 'Note',
        'tipo' => 'Tipo',
        'sotto_tipo' => 'SottoTipo',
        'lotto' => 'Lotto',
        'escludi_attestato' => 'EscludiAttestato',
        'flag_one_off' => 'flagOneOff',
        'prodotti' => 'Prodotti'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id_versamento' => 'setIdVersamento',
        'id_regolare' => 'setIdRegolare',
        'id_web' => 'setIdWeb',
        'codice_cliente' => 'setCodiceCliente',
        'codice_soggetto_versante' => 'setCodiceSoggettoVersante',
        'codice_centro_ricavo' => 'setCodiceCentroRicavo',
        'codice_partner' => 'setCodicePartner',
        'codice_riferimento' => 'setCodiceRiferimento',
        'campagna' => 'setCampagna',
        'centro' => 'setCentro',
        'canale' => 'setCanale',
        'bambino' => 'setBambino',
        'progetto' => 'setProgetto',
        'conto' => 'setConto',
        'evento' => 'setEvento',
        'codice_transazione' => 'setCodiceTransazione',
        'importo' => 'setImporto',
        'metodo' => 'setMetodo',
        'descrizione_metodo' => 'setDescrizioneMetodo',
        'data_operazione' => 'setDataOperazione',
        'data_valuta' => 'setDataValuta',
        'note' => 'setNote',
        'tipo' => 'setTipo',
        'sotto_tipo' => 'setSottoTipo',
        'lotto' => 'setLotto',
        'escludi_attestato' => 'setEscludiAttestato',
        'flag_one_off' => 'setFlagOneOff',
        'prodotti' => 'setProdotti'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id_versamento' => 'getIdVersamento',
        'id_regolare' => 'getIdRegolare',
        'id_web' => 'getIdWeb',
        'codice_cliente' => 'getCodiceCliente',
        'codice_soggetto_versante' => 'getCodiceSoggettoVersante',
        'codice_centro_ricavo' => 'getCodiceCentroRicavo',
        'codice_partner' => 'getCodicePartner',
        'codice_riferimento' => 'getCodiceRiferimento',
        'campagna' => 'getCampagna',
        'centro' => 'getCentro',
        'canale' => 'getCanale',
        'bambino' => 'getBambino',
        'progetto' => 'getProgetto',
        'conto' => 'getConto',
        'evento' => 'getEvento',
        'codice_transazione' => 'getCodiceTransazione',
        'importo' => 'getImporto',
        'metodo' => 'getMetodo',
        'descrizione_metodo' => 'getDescrizioneMetodo',
        'data_operazione' => 'getDataOperazione',
        'data_valuta' => 'getDataValuta',
        'note' => 'getNote',
        'tipo' => 'getTipo',
        'sotto_tipo' => 'getSottoTipo',
        'lotto' => 'getLotto',
        'escludi_attestato' => 'getEscludiAttestato',
        'flag_one_off' => 'getFlagOneOff',
        'prodotti' => 'getProdotti'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id_versamento'] = isset($data['id_versamento']) ? $data['id_versamento'] : null;
        $this->container['id_regolare'] = isset($data['id_regolare']) ? $data['id_regolare'] : null;
        $this->container['id_web'] = isset($data['id_web']) ? $data['id_web'] : null;
        $this->container['codice_cliente'] = isset($data['codice_cliente']) ? $data['codice_cliente'] : null;
        $this->container['codice_soggetto_versante'] = isset($data['codice_soggetto_versante']) ? $data['codice_soggetto_versante'] : null;
        $this->container['codice_centro_ricavo'] = isset($data['codice_centro_ricavo']) ? $data['codice_centro_ricavo'] : null;
        $this->container['codice_partner'] = isset($data['codice_partner']) ? $data['codice_partner'] : null;
        $this->container['codice_riferimento'] = isset($data['codice_riferimento']) ? $data['codice_riferimento'] : null;
        $this->container['campagna'] = isset($data['campagna']) ? $data['campagna'] : null;
        $this->container['centro'] = isset($data['centro']) ? $data['centro'] : null;
        $this->container['canale'] = isset($data['canale']) ? $data['canale'] : null;
        $this->container['bambino'] = isset($data['bambino']) ? $data['bambino'] : null;
        $this->container['progetto'] = isset($data['progetto']) ? $data['progetto'] : null;
        $this->container['conto'] = isset($data['conto']) ? $data['conto'] : null;
        $this->container['evento'] = isset($data['evento']) ? $data['evento'] : null;
        $this->container['codice_transazione'] = isset($data['codice_transazione']) ? $data['codice_transazione'] : null;
        $this->container['importo'] = isset($data['importo']) ? $data['importo'] : null;
        $this->container['metodo'] = isset($data['metodo']) ? $data['metodo'] : null;
        $this->container['descrizione_metodo'] = isset($data['descrizione_metodo']) ? $data['descrizione_metodo'] : null;
        $this->container['data_operazione'] = isset($data['data_operazione']) ? $data['data_operazione'] : null;
        $this->container['data_valuta'] = isset($data['data_valuta']) ? $data['data_valuta'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['tipo'] = isset($data['tipo']) ? $data['tipo'] : null;
        $this->container['sotto_tipo'] = isset($data['sotto_tipo']) ? $data['sotto_tipo'] : null;
        $this->container['lotto'] = isset($data['lotto']) ? $data['lotto'] : null;
        $this->container['escludi_attestato'] = isset($data['escludi_attestato']) ? $data['escludi_attestato'] : null;
        $this->container['flag_one_off'] = isset($data['flag_one_off']) ? $data['flag_one_off'] : null;
        $this->container['prodotti'] = isset($data['prodotti']) ? $data['prodotti'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id_versamento
     *
     * @return int
     */
    public function getIdVersamento()
    {
        return $this->container['id_versamento'];
    }

    /**
     * Sets id_versamento
     *
     * @param int $id_versamento id_versamento
     *
     * @return $this
     */
    public function setIdVersamento($id_versamento)
    {
        $this->container['id_versamento'] = $id_versamento;

        return $this;
    }

    /**
     * Gets id_regolare
     *
     * @return int
     */
    public function getIdRegolare()
    {
        return $this->container['id_regolare'];
    }

    /**
     * Sets id_regolare
     *
     * @param int $id_regolare id_regolare
     *
     * @return $this
     */
    public function setIdRegolare($id_regolare)
    {
        $this->container['id_regolare'] = $id_regolare;

        return $this;
    }

    /**
     * Gets id_web
     *
     * @return string
     */
    public function getIdWeb()
    {
        return $this->container['id_web'];
    }

    /**
     * Sets id_web
     *
     * @param string $id_web id_web
     *
     * @return $this
     */
    public function setIdWeb($id_web)
    {
        $this->container['id_web'] = $id_web;

        return $this;
    }

    /**
     * Gets codice_cliente
     *
     * @return string
     */
    public function getCodiceCliente()
    {
        return $this->container['codice_cliente'];
    }

    /**
     * Sets codice_cliente
     *
     * @param string $codice_cliente codice_cliente
     *
     * @return $this
     */
    public function setCodiceCliente($codice_cliente)
    {
        $this->container['codice_cliente'] = $codice_cliente;

        return $this;
    }

    /**
     * Gets codice_soggetto_versante
     *
     * @return string
     */
    public function getCodiceSoggettoVersante()
    {
        return $this->container['codice_soggetto_versante'];
    }

    /**
     * Sets codice_soggetto_versante
     *
     * @param string $codice_soggetto_versante codice_soggetto_versante
     *
     * @return $this
     */
    public function setCodiceSoggettoVersante($codice_soggetto_versante)
    {
        $this->container['codice_soggetto_versante'] = $codice_soggetto_versante;

        return $this;
    }

    /**
     * Gets codice_centro_ricavo
     *
     * @return string
     */
    public function getCodiceCentroRicavo()
    {
        return $this->container['codice_centro_ricavo'];
    }

    /**
     * Sets codice_centro_ricavo
     *
     * @param string $codice_centro_ricavo codice_centro_ricavo
     *
     * @return $this
     */
    public function setCodiceCentroRicavo($codice_centro_ricavo)
    {
        $this->container['codice_centro_ricavo'] = $codice_centro_ricavo;

        return $this;
    }

    /**
     * Gets codice_partner
     *
     * @return string
     */
    public function getCodicePartner()
    {
        return $this->container['codice_partner'];
    }

    /**
     * Sets codice_partner
     *
     * @param string $codice_partner codice_partner
     *
     * @return $this
     */
    public function setCodicePartner($codice_partner)
    {
        $this->container['codice_partner'] = $codice_partner;

        return $this;
    }

    /**
     * Gets codice_riferimento
     *
     * @return string
     */
    public function getCodiceRiferimento()
    {
        return $this->container['codice_riferimento'];
    }

    /**
     * Sets codice_riferimento
     *
     * @param string $codice_riferimento codice_riferimento
     *
     * @return $this
     */
    public function setCodiceRiferimento($codice_riferimento)
    {
        $this->container['codice_riferimento'] = $codice_riferimento;

        return $this;
    }

    /**
     * Gets campagna
     *
     * @return object
     */
    public function getCampagna()
    {
        return $this->container['campagna'];
    }

    /**
     * Sets campagna
     *
     * @param object $campagna campagna
     *
     * @return $this
     */
    public function setCampagna($campagna)
    {
        $this->container['campagna'] = $campagna;

        return $this;
    }

    /**
     * Gets centro
     *
     * @return object
     */
    public function getCentro()
    {
        return $this->container['centro'];
    }

    /**
     * Sets centro
     *
     * @param object $centro centro
     *
     * @return $this
     */
    public function setCentro($centro)
    {
        $this->container['centro'] = $centro;

        return $this;
    }

    /**
     * Gets canale
     *
     * @return object
     */
    public function getCanale()
    {
        return $this->container['canale'];
    }

    /**
     * Sets canale
     *
     * @param object $canale canale
     *
     * @return $this
     */
    public function setCanale($canale)
    {
        $this->container['canale'] = $canale;

        return $this;
    }

    /**
     * Gets bambino
     *
     * @return object
     */
    public function getBambino()
    {
        return $this->container['bambino'];
    }

    /**
     * Sets bambino
     *
     * @param object $bambino bambino
     *
     * @return $this
     */
    public function setBambino($bambino)
    {
        $this->container['bambino'] = $bambino;

        return $this;
    }

    /**
     * Gets progetto
     *
     * @return object
     */
    public function getProgetto()
    {
        return $this->container['progetto'];
    }

    /**
     * Sets progetto
     *
     * @param object $progetto progetto
     *
     * @return $this
     */
    public function setProgetto($progetto)
    {
        $this->container['progetto'] = $progetto;

        return $this;
    }

    /**
     * Gets conto
     *
     * @return object
     */
    public function getConto()
    {
        return $this->container['conto'];
    }

    /**
     * Sets conto
     *
     * @param object $conto conto
     *
     * @return $this
     */
    public function setConto($conto)
    {
        $this->container['conto'] = $conto;

        return $this;
    }

    /**
     * Gets evento
     *
     * @return object
     */
    public function getEvento()
    {
        return $this->container['evento'];
    }

    /**
     * Sets evento
     *
     * @param object $evento evento
     *
     * @return $this
     */
    public function setEvento($evento)
    {
        $this->container['evento'] = $evento;

        return $this;
    }

    /**
     * Gets codice_transazione
     *
     * @return string
     */
    public function getCodiceTransazione()
    {
        return $this->container['codice_transazione'];
    }

    /**
     * Sets codice_transazione
     *
     * @param string $codice_transazione codice_transazione
     *
     * @return $this
     */
    public function setCodiceTransazione($codice_transazione)
    {
        $this->container['codice_transazione'] = $codice_transazione;

        return $this;
    }

    /**
     * Gets importo
     *
     * @return float
     */
    public function getImporto()
    {
        return $this->container['importo'];
    }

    /**
     * Sets importo
     *
     * @param float $importo importo
     *
     * @return $this
     */
    public function setImporto($importo)
    {
        $this->container['importo'] = $importo;

        return $this;
    }

    /**
     * Gets metodo
     *
     * @return string
     */
    public function getMetodo()
    {
        return $this->container['metodo'];
    }

    /**
     * Sets metodo
     *
     * @param string $metodo metodo
     *
     * @return $this
     */
    public function setMetodo($metodo)
    {
        $this->container['metodo'] = $metodo;

        return $this;
    }

    /**
     * Gets descrizione_metodo
     *
     * @return string
     */
    public function getDescrizioneMetodo()
    {
        return $this->container['descrizione_metodo'];
    }

    /**
     * Sets descrizione_metodo
     *
     * @param string $descrizione_metodo descrizione_metodo
     *
     * @return $this
     */
    public function setDescrizioneMetodo($descrizione_metodo)
    {
        $this->container['descrizione_metodo'] = $descrizione_metodo;

        return $this;
    }

    /**
     * Gets data_operazione
     *
     * @return string
     */
    public function getDataOperazione()
    {
        return $this->container['data_operazione'];
    }

    /**
     * Sets data_operazione
     *
     * @param string $data_operazione data_operazione
     *
     * @return $this
     */
    public function setDataOperazione($data_operazione)
    {
        $this->container['data_operazione'] = $data_operazione;

        return $this;
    }

    /**
     * Gets data_valuta
     *
     * @return string
     */
    public function getDataValuta()
    {
        return $this->container['data_valuta'];
    }

    /**
     * Sets data_valuta
     *
     * @param string $data_valuta data_valuta
     *
     * @return $this
     */
    public function setDataValuta($data_valuta)
    {
        $this->container['data_valuta'] = $data_valuta;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets tipo
     *
     * @return object
     */
    public function getTipo()
    {
        return $this->container['tipo'];
    }

    /**
     * Sets tipo
     *
     * @param object $tipo tipo
     *
     * @return $this
     */
    public function setTipo($tipo)
    {
        $this->container['tipo'] = $tipo;

        return $this;
    }

    /**
     * Gets sotto_tipo
     *
     * @return object
     */
    public function getSottoTipo()
    {
        return $this->container['sotto_tipo'];
    }

    /**
     * Sets sotto_tipo
     *
     * @param object $sotto_tipo sotto_tipo
     *
     * @return $this
     */
    public function setSottoTipo($sotto_tipo)
    {
        $this->container['sotto_tipo'] = $sotto_tipo;

        return $this;
    }

    /**
     * Gets lotto
     *
     * @return string
     */
    public function getLotto()
    {
        return $this->container['lotto'];
    }

    /**
     * Sets lotto
     *
     * @param string $lotto lotto
     *
     * @return $this
     */
    public function setLotto($lotto)
    {
        $this->container['lotto'] = $lotto;

        return $this;
    }

    /**
     * Gets escludi_attestato
     *
     * @return string
     */
    public function getEscludiAttestato()
    {
        return $this->container['escludi_attestato'];
    }

    /**
     * Sets escludi_attestato
     *
     * @param string $escludi_attestato escludi_attestato
     *
     * @return $this
     */
    public function setEscludiAttestato($escludi_attestato)
    {
        $this->container['escludi_attestato'] = $escludi_attestato;

        return $this;
    }

    /**
     * Gets flag_one_off
     *
     * @return bool
     */
    public function getFlagOneOff()
    {
        return $this->container['flag_one_off'];
    }

    /**
     * Sets flag_one_off
     *
     * @param bool $flag_one_off flag_one_off
     *
     * @return $this
     */
    public function setFlagOneOff($flag_one_off)
    {
        $this->container['flag_one_off'] = $flag_one_off;

        return $this;
    }

    /**
     * Gets prodotti
     *
     * @return \Swagger\Client\Model\VersamentoProdotti[]
     */
    public function getProdotti()
    {
        return $this->container['prodotti'];
    }

    /**
     * Sets prodotti
     *
     * @param \Swagger\Client\Model\VersamentoProdotti[] $prodotti prodotti
     *
     * @return $this
     */
    public function setProdotti($prodotti)
    {
        $this->container['prodotti'] = $prodotti;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


